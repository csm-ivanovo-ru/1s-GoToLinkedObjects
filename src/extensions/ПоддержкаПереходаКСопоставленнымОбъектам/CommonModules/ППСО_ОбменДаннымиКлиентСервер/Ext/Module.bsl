#Область ПрограммныйИнтерфейс

// Функция - Получить навигационную ссылку сопоставленного объекта в указанной информационной базе
//
// Параметры:
//  УникальныйИдентификаторСопоставленногоОбъекта	 - Строка, УникальныйИдентификатор	 -
//   уникальный идентификтор объекта, для которого будет возвращена навигационная ссылка
//  ТипОбъектаВИнформационнойБазе	 - Строка	 - тип объекта с указанным уникальным идентификатором
//   в указанной базе
//  ИмяСервера						 - Строка	 - имя сервера 1С:Предприятие,
//   на котором размещена информационная база
//  ИмяИнформационнойБазы			 - Строка	 - имя информационной базы на указанном сервере
// 
// Возвращаемое значение:
//  Строка - навигационная ссылка для указанного объекта в указанной базе
//
Функция ПолучитьНавигационнуюСсылкуСопоставленногоОбъектаПоРеквизитам(
	Знач УникальныйИдентификаторСопоставленногоОбъекта,
	Знач ТипОбъектаВИнформационнойБазе,
	Знач ИмяСервера,
	Знач ИмяИнформационнойБазы
) Экспорт
	
	Контекст = "ППСО_ОбменДаннымиКлиентСервер.ПолучитьНавигационнуюСсылкуСопоставленногоОбъектаПоРеквизитам";
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		Контекст,
		"УникальныйИдентификаторСопоставленногоОбъекта",
		УникальныйИдентификаторСопоставленногоОбъекта,
		Новый ОписаниеТипов("Строка, УникальныйИдентификатор"));
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		Контекст,
		"ТипОбъектаВИнформационнойБазе",
		ТипОбъектаВИнформационнойБазе,
		Тип("Строка"));
	ОбщегоНазначенияКлиентСервер.Проверить(
		Не ПустаяСтрока(ТипОбъектаВИнформационнойБазе),
		НСтр("ru = 'Недопустимое значение параметра ТипОбъектаВИнформационнойБазе, 
			|Ожидалось наименование типа объекта в информационной базе - приемнике'",
			ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		Контекст);
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		Контекст,
		"ИмяСервера",
		ИмяСервера,
		Тип("Строка"));
	ОбщегоНазначенияКлиентСервер.Проверить(
		Не ПустаяСтрока(ИмяСервера),
		НСтр("ru = 'Недопустимое значение параметра ИмяСервера, 
			|Ожидалось FQDN имя сервера 1С:Предприятие, на котором размещена информационная база - приемник'",
			ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		Контекст);
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		Контекст,
		"ИмяИнформационнойБазы",
		ИмяИнформационнойБазы,
		Тип("Строка"));
	ОбщегоНазначенияКлиентСервер.Проверить(
		Не ПустаяСтрока(ИмяИнформационнойБазы),
		НСтр("ru = 'Недопустимое значение параметра ИмяИнформационнойБазы, 
			|Ожидалось имя информационной базы - приемника на указанном сервере 1С:Предприятие'",
			ОбщегоНазначенияКлиентСервер.КодОсновногоЯзыка()),
		Контекст);

	НаименованиеТипаОбъекта = СтрЗаменить(ТипОбъектаВИнформационнойБазе, "Ссылка.", ".");
	ПрефиксНавигационнойСсылки = "e1c://server/" + ИмяСервера + "/" + ИмяИнформационнойБазы;
	ПараметрНавигационнойСсылки = ПолучитьПараметрНавигационнойСсылки(УникальныйИдентификаторСопоставленногоОбъекта);
	НавигационнаяСсылкаОбъекта = ПрефиксНавигационнойСсылки
		+ "#e1cib/data/" + НаименованиеТипаОбъекта
		+ "?ref=" + ПараметрНавигационнойСсылки;

	Возврат НавигационнаяСсылкаОбъекта;

КонецФункции

// Функция - Получить параметр навигационной ссылки по уникальному идентификатору
//
// Параметры:
//  ЗначениеУникальногоИдентификатора	 - УникальныйИдентификатор, Строка	 - уникальный идентификтор объекта,
//   для которого будет возвращен параметр навигационной ссылки
// 
// Возвращаемое значение:
//  Строка - параметр навигационной ссылки
//
Функция ПолучитьПараметрНавигационнойСсылки(Знач ЗначениеУникальногоИдентификатора) Экспорт
	
	Контекст = "ППСО_ОбменДаннымиКлиентСервер.ПолучитьПараметрНавигационнойСсылки";
	
	ОбщегоНазначенияКлиентСервер.ПроверитьПараметр(
		Контекст,
		"ЗначениеУникальногоИдентификатора",
		ЗначениеУникальногоИдентификатора,
		Новый ОписаниеТипов("Строка, УникальныйИдентификатор"));
		
	Если ТипЗнч(ЗначениеУникальногоИдентификатора) = Тип("Строка") Тогда
		УникальныйИдентификаторВременный = Новый УникальныйИдентификатор(ЗначениеУникальногоИдентификатора);
	Иначе
		УникальныйИдентификаторВременный = ЗначениеУникальногоИдентификатора;
	КонецЕсли;
	УникальныйИдентификаторСтрокой = Строка(УникальныйИдентификаторВременный);
	
	ПараметрНавигационнойСсылки =
		Сред(УникальныйИдентификаторСтрокой, 20, 4)
		+ Сред(УникальныйИдентификаторСтрокой, 25, 12)
		+ Сред(УникальныйИдентификаторСтрокой, 15, 4)
		+ Сред(УникальныйИдентификаторСтрокой, 10, 4)
		+ Лев(УникальныйИдентификаторСтрокой, 8);

	Возврат ПараметрНавигационнойСсылки;

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#КонецОбласти
